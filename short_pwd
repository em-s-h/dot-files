#!/bin/python3

import argparse
import os

parser = argparse.ArgumentParser(
    description="A Python script that shortens the path printed by pwd",
    epilog="Written by Emilly S.H. / M.S. @ https://github.com/em-s-h",
    formatter_class=argparse.MetavarTypeHelpFormatter,
)

parser.add_argument(
    "--full-names",
    "-f",

    default=2,
    type=int,

    help="How many directories don't have their names shortened. (default 2)",
)

parser.add_argument(
    "--short-home",
    "-s",

    action="store_false",
    help="Replace /home/user/ with ~/ (default)"
)

parser.add_argument(
    "--licence",
    "-l",

    action="store_true",
    help="Print this software's licence and exit",
)

#
args = parser.parse_args()
num_full_names = args.full_names
print_licence = args.licence
short_home = args.short_home

#
if print_licence:
    print('''
                    Copyright (C) 2023 Emilly M.S.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
    ''')
    exit(0)

def shorten_path(num_names, current_path):
    for i in range(1, num_names):
        dir: str = current_path[i]

        if dir[0] == '.':
            current_path[i] = dir[:2]
        else:
            current_path[i] = dir[0]

    return current_path

#
current_path = os.popen('pwd')
user = os.popen('whoami')

#
current_path = current_path.read().strip()
user = user.read().strip()

#
if short_home:
    current_path = current_path.replace(f"/home/{user}", "~")

tmp_path = current_path.split("/")

#
if len(tmp_path) <= num_full_names:
    current_path = '/'.join(tmp_path)
    print(current_path)
    exit(0)

#
num_short_names = len(tmp_path) - num_full_names
tmp_path = shorten_path(num_short_names, tmp_path)

#
current_path = '/'.join(tmp_path)
print(current_path)
